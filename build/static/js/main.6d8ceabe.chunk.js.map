{"version":3,"sources":["App.js","index.js"],"names":["renderPost","post","data","title","url","id","className","href","target","rel","src","alt","nonStickiedOnly","stickied","App","subreddit","domElement","getAttribute","useState","loading","setLoading","error","setError","setData","useEffect","fetch","then","response","json","children","slice","catch","e","console","log","length","filter","map","document","querySelectorAll","forEach","Div","ReactDOM","render","StrictMode"],"mappings":"qLAIA,SAASA,EAAWC,GAAM,IAAD,EACcA,EAA7BC,KAAQC,EADO,EACPA,MAAOC,EADA,EACAA,IAAKC,EADL,EACKA,GAE5B,OACE,qBAAKC,UAAU,sBAAf,SACE,mBAAGC,KAAMH,EAAKE,UAAU,uBAAuBE,OAAO,SAASC,IAAI,sBAAnE,SACE,qBAAKC,IAAKN,EAAKO,IAAKR,EAAOG,UAAU,0BAFCD,GAS9C,SAASO,EAAgBX,GACvB,OAAQA,EAAKC,KAAKW,SAuCLC,MApCf,YAA8B,IACtBC,EADqB,EAAdC,WACgBC,aAAa,kBADf,EAEGC,qBAFH,mBAEpBC,EAFoB,KAEXC,EAFW,OAGDF,mBAAS,IAHR,mBAGpBG,EAHoB,KAGbC,EAHa,OAIHJ,mBAAS,IAJN,mBAIpBhB,EAJoB,KAIdqB,EAJc,KAsB3B,OAhBAC,qBAAU,WAERJ,GAAW,GACXK,MAAM,4BAAD,OAA6BV,EAA7B,UACFW,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACxB,GACLkB,GAAW,GACXG,EAAQrB,EAAKA,KAAK2B,SAASC,MAAM,EAAG,QAErCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZZ,GAAW,GACXE,EAAS,mCAEZ,CAAEP,IAGH,sBAAKT,UAAU,qBAAf,UACE,oBAAIA,UAAU,wBAAd,+BAGA,sBAAKA,UAAU,uBAAf,UACGa,GAAW,aACXE,GAASA,IACPnB,EAAKiC,QAAUjC,EAAKkC,OAAOxB,GAAiByB,IAAIrC,UC9CxCsC,SAASC,iBAAiB,kBAGlCC,SAAQ,SAAAC,GACjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAK5B,WAAYyB,MAEnBA,O","file":"static/js/main.6d8ceabe.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// Render each post\nfunction renderPost(post){\n  const { data: { title, url, id } } = post\n\n  return (\n    <div className=\"stupid_widget__post\" key={id}>\n      <a href={url} className=\"stupid_widget__title\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={url} alt={title} className=\"stupid_widget__img\" />\n      </a>\n    </div>\n  )\n}\n\n// Filter, since reddit always returns stickied posts up top\nfunction nonStickiedOnly(post){\n  return !post.data.stickied\n}\n\nfunction App({ domElement }) {\n  const subreddit = domElement.getAttribute(\"data-subreddit\")\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from reddit\n    setLoading(true)\n    fetch(`https://www.reddit.com/r/${subreddit}.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        setLoading(false);\n        setData(data.data.children.slice(0, 10));\n      })\n      .catch((e) => {\n        console.log(e)\n        setLoading(false);\n        setError('error fetching from reddit');\n      });\n  }, [ subreddit ])\n\n  return (\n    <div className=\"stupid_widget__app\">\n      <h1 className=\"stupid_widget__header\">\n        Cute dog pictures\n      </h1>\n      <div className=\"stupid_widget__inner\">\n        {loading && \"Loading...\"}\n        {error && error}\n        {!!data.length && data.filter(nonStickiedOnly).map(renderPost)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Find all widget divs\nconst WidgetDivs = document.querySelectorAll('.stupid_widget')\n\n// Inject our React App into each\nWidgetDivs.forEach(Div => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App domElement={Div} />\n    </React.StrictMode>,\n    Div\n  );\n})\n"],"sourceRoot":""}