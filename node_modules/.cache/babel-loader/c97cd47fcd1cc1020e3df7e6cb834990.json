{"ast":null,"code":"import _slicedToArray from\"/Users/meg/code/stupid-widget-try/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'./App.css';// Render each post\nfunction renderPost(post){var _post$data=post.data,title=_post$data.title,url=_post$data.url,id=_post$data.id;return/*#__PURE__*/React.createElement(\"div\",{className:\"stupid_widget__post\",key:id},/*#__PURE__*/React.createElement(\"a\",{href:url,className:\"stupid_widget__title\",target:\"_blank\",rel:\"noopener noreferrer\"},/*#__PURE__*/React.createElement(\"img\",{src:url,alt:title,className:\"stupid_widget__img\"})));}// Filter, since reddit always returns stickied posts up top\nfunction nonStickiedOnly(post){return!post.data.stickied;}function App(_ref){var domElement=_ref.domElement;var subreddit=domElement.getAttribute(\"data-subreddit\");var _useState=useState(),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),data=_useState6[0],setData=_useState6[1];useEffect(function(){// Fetch data from reddit\nsetLoading(true);fetch(\"https://www.reddit.com/r/\".concat(subreddit,\".json\")).then(function(response){return response.json();}).then(function(data){setLoading(false);setData(data.data.children.slice(0,10));}).catch(function(e){console.log(e);setLoading(false);setError('error fetching from reddit');});},[subreddit]);return/*#__PURE__*/React.createElement(\"div\",{className:\"stupid_widget__app\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"stupid_widget__header\"},\"Cute dog pictures\"),/*#__PURE__*/React.createElement(\"div\",{className:\"stupid_widget__inner\"},loading&&\"Loading...\",error&&error,!!data.length&&data.filter(nonStickiedOnly).map(renderPost)));}export default App;","map":{"version":3,"sources":["/Users/meg/code/stupid-widget-try/src/App.js"],"names":["React","useEffect","useState","renderPost","post","data","title","url","id","nonStickiedOnly","stickied","App","domElement","subreddit","getAttribute","loading","setLoading","error","setError","setData","fetch","then","response","json","children","slice","catch","e","console","log","length","filter","map"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,WAAP,CAEA;AACA,QAASC,CAAAA,UAAT,CAAoBC,IAApB,CAAyB,gBACcA,IADd,CACfC,IADe,CACPC,KADO,YACPA,KADO,CACAC,GADA,YACAA,GADA,CACKC,EADL,YACKA,EADL,CAGvB,mBACE,2BAAK,SAAS,CAAC,qBAAf,CAAqC,GAAG,CAAEA,EAA1C,eACE,yBAAG,IAAI,CAAED,GAAT,CAAc,SAAS,CAAC,sBAAxB,CAA+C,MAAM,CAAC,QAAtD,CAA+D,GAAG,CAAC,qBAAnE,eACE,2BAAK,GAAG,CAAEA,GAAV,CAAe,GAAG,CAAED,KAApB,CAA2B,SAAS,CAAC,oBAArC,EADF,CADF,CADF,CAOD,CAED;AACA,QAASG,CAAAA,eAAT,CAAyBL,IAAzB,CAA8B,CAC5B,MAAO,CAACA,IAAI,CAACC,IAAL,CAAUK,QAAlB,CACD,CAED,QAASC,CAAAA,GAAT,MAA6B,IAAdC,CAAAA,UAAc,MAAdA,UAAc,CAC3B,GAAMC,CAAAA,SAAS,CAAGD,UAAU,CAACE,YAAX,CAAwB,gBAAxB,CAAlB,CAD2B,cAEGZ,QAAQ,EAFX,wCAEpBa,OAFoB,eAEXC,UAFW,8BAGDd,QAAQ,CAAC,EAAD,CAHP,yCAGpBe,KAHoB,eAGbC,QAHa,8BAIHhB,QAAQ,CAAC,EAAD,CAJL,yCAIpBG,IAJoB,eAIdc,OAJc,eAM3BlB,SAAS,CAAC,UAAM,CACd;AACAe,UAAU,CAAC,IAAD,CAAV,CACAI,KAAK,oCAA6BP,SAA7B,UAAL,CACGQ,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAAChB,IAAD,CAAU,CACdW,UAAU,CAAC,KAAD,CAAV,CACAG,OAAO,CAACd,IAAI,CAACA,IAAL,CAAUmB,QAAV,CAAmBC,KAAnB,CAAyB,CAAzB,CAA4B,EAA5B,CAAD,CAAP,CACD,CALH,EAMGC,KANH,CAMS,SAACC,CAAD,CAAO,CACZC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EACAX,UAAU,CAAC,KAAD,CAAV,CACAE,QAAQ,CAAC,4BAAD,CAAR,CACD,CAVH,EAWD,CAdQ,CAcN,CAAEL,SAAF,CAdM,CAAT,CAgBA,mBACE,2BAAK,SAAS,CAAC,oBAAf,eACE,0BAAI,SAAS,CAAC,uBAAd,sBADF,cAIE,2BAAK,SAAS,CAAC,sBAAf,EACGE,OAAO,EAAI,YADd,CAEGE,KAAK,EAAIA,KAFZ,CAGG,CAAC,CAACZ,IAAI,CAACyB,MAAP,EAAiBzB,IAAI,CAAC0B,MAAL,CAAYtB,eAAZ,EAA6BuB,GAA7B,CAAiC7B,UAAjC,CAHpB,CAJF,CADF,CAYD,CAED,cAAeQ,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// Render each post\nfunction renderPost(post){\n  const { data: { title, url, id } } = post\n\n  return (\n    <div className=\"stupid_widget__post\" key={id}>\n      <a href={url} className=\"stupid_widget__title\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={url} alt={title} className=\"stupid_widget__img\" />\n      </a>\n    </div>\n  )\n}\n\n// Filter, since reddit always returns stickied posts up top\nfunction nonStickiedOnly(post){\n  return !post.data.stickied\n}\n\nfunction App({ domElement }) {\n  const subreddit = domElement.getAttribute(\"data-subreddit\")\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from reddit\n    setLoading(true)\n    fetch(`https://www.reddit.com/r/${subreddit}.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        setLoading(false);\n        setData(data.data.children.slice(0, 10));\n      })\n      .catch((e) => {\n        console.log(e)\n        setLoading(false);\n        setError('error fetching from reddit');\n      });\n  }, [ subreddit ])\n\n  return (\n    <div className=\"stupid_widget__app\">\n      <h1 className=\"stupid_widget__header\">\n        Cute dog pictures\n      </h1>\n      <div className=\"stupid_widget__inner\">\n        {loading && \"Loading...\"}\n        {error && error}\n        {!!data.length && data.filter(nonStickiedOnly).map(renderPost)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}