{"ast":null,"code":"var _jsxFileName = \"/Users/meg/code/stupid-widget/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css'; // Render each post\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction renderPost(post) {\n  console.log(post);\n  const {\n    data: {\n      title,\n      url,\n      id\n    }\n  } = post;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stupid_widget__post\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: url,\n      className: \"stupid_widget__title\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n} // Filter, since reddit always returns stickied posts up top\n\n\nfunction nonStickiedOnly(post) {\n  return !post.data.stickied;\n}\n\nfunction App({\n  domElement\n}) {\n  _s();\n\n  const subreddit = domElement.getAttribute(\"data-subreddit\");\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState('');\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Fetch data from reddit\n    setLoading(true);\n    fetch(`https://www.reddit.com/r/${subreddit}.json`).then(response => response.json()).then(data => {\n      setLoading(false);\n      setData(data.data.children.slice(0, 10));\n    }).catch(e => {\n      console.log(e);\n      setLoading(false);\n      setError('error fetching from reddit');\n    });\n  }, [subreddit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stupid_widget__app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"stupid_widget__header\",\n      children: \"Cute dog pictures\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stupid_widget__inner\",\n      children: [loading && \"Loading...\", error && error, !!data.length && data.filter(nonStickiedOnly).map(renderPost)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IdmSfJLKNuH28Ok5K+UkwHmlvfw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/meg/code/stupid-widget/src/App.js"],"names":["React","useEffect","useState","renderPost","post","console","log","data","title","url","id","nonStickiedOnly","stickied","App","domElement","subreddit","getAttribute","loading","setLoading","error","setError","setData","fetch","then","response","json","children","slice","catch","e","length","filter","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP,C,CAEA;;;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAM;AAAEG,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA,GAAT;AAAcC,MAAAA;AAAd;AAAR,MAA+BN,IAArC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACE;AAAG,MAAA,IAAI,EAAEK,GAAT;AAAc,MAAA,SAAS,EAAC,sBAAxB;AAA+C,MAAA,MAAM,EAAC,QAAtD;AAA+D,MAAA,GAAG,EAAC,qBAAnE;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEA,GAAV;AAAe,QAAA,GAAG,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,KAA0CE,EAA1C;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,C,CAED;;;AACA,SAASC,eAAT,CAAyBP,IAAzB,EAA8B;AAC5B,SAAO,CAACA,IAAI,CAACG,IAAL,CAAUK,QAAlB;AACD;;AAED,SAASC,GAAT,CAAa;AAAEC,EAAAA;AAAF,CAAb,EAA6B;AAAA;;AAC3B,QAAMC,SAAS,GAAGD,UAAU,CAACE,YAAX,CAAwB,gBAAxB,CAAlB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,EAAtC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,IAAD,EAAOc,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAiB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,IAAAA,KAAK,CAAE,4BAA2BP,SAAU,OAAvC,CAAL,CACGQ,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEShB,IAAD,IAAU;AACdW,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,MAAAA,OAAO,CAACd,IAAI,CAACA,IAAL,CAAUmB,QAAV,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,EAA5B,CAAD,CAAP;AACD,KALH,EAMGC,KANH,CAMUC,CAAD,IAAO;AACZxB,MAAAA,OAAO,CAACC,GAAR,CAAYuB,CAAZ;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACD,KAVH;AAWD,GAdQ,EAcN,CAAEL,SAAF,CAdM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,iBACGE,OAAO,IAAI,YADd,EAEGE,KAAK,IAAIA,KAFZ,EAGG,CAAC,CAACZ,IAAI,CAACuB,MAAP,IAAiBvB,IAAI,CAACwB,MAAL,CAAYpB,eAAZ,EAA6BqB,GAA7B,CAAiC7B,UAAjC,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAlCQU,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// Render each post\nfunction renderPost(post){\n  console.log(post)\n  const { data: { title, url, id } } = post\n\n  return (\n    <div className=\"stupid_widget__post\" key={id}>\n      <a href={url} className=\"stupid_widget__title\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={url} alt={title} />\n      </a>\n    </div>\n  )\n}\n\n// Filter, since reddit always returns stickied posts up top\nfunction nonStickiedOnly(post){\n  return !post.data.stickied\n}\n\nfunction App({ domElement }) {\n  const subreddit = domElement.getAttribute(\"data-subreddit\")\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from reddit\n    setLoading(true)\n    fetch(`https://www.reddit.com/r/${subreddit}.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        setLoading(false);\n        setData(data.data.children.slice(0, 10));\n      })\n      .catch((e) => {\n        console.log(e)\n        setLoading(false);\n        setError('error fetching from reddit');\n      });\n  }, [ subreddit ])\n\n  return (\n    <div className=\"stupid_widget__app\">\n      <h1 className=\"stupid_widget__header\">\n        Cute dog pictures\n      </h1>\n      <div className=\"stupid_widget__inner\">\n        {loading && \"Loading...\"}\n        {error && error}\n        {!!data.length && data.filter(nonStickiedOnly).map(renderPost)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}